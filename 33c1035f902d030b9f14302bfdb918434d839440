{
  "comments": [
    {
      "key": {
        "uuid": "906ccb82_ea4f87b9",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 983,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-09-22T05:30:33Z",
      "side": 1,
      "message": "We can\u0027t we just use ty here? (Can $ref be \"any\" or \"array\"?)",
      "range": {
        "startLine": 983,
        "startChar": 1,
        "endLine": 983,
        "endChar": 25
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "906ccb82_8ade0bcb",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 983,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-23T06:13:47Z",
      "side": 1,
      "message": "Argh.\n\nSo.\n\n\nIn the case where t is an \"object\" with additionalProperties.type \u003d\u003d \"any\", the generator treats this as an \"Any\" type (see IsAny) above.  These means that they are given their own Go types, like \n\ntype LogEntryJsonPayload interface{}\n\n@ https://github.com/google/google-api-go-client/blob/master/logging/v2beta1/logging-gen.go#L538\n\n\nSo users can supply any struct here and let the json marshaler render it as json.  I believe that functionality was introduced specifically to support the logging API.  It seems a bit weird to do this, because users could supply a non-struct type, which would not render as a json object, and this would be invalid.  I think we would be better off just using map[string]interface{} here, but it would make the logging API more painful, and we would break existing code.\n\nBecause of this special handling of \"Any\" types, MapType needs to claim that such types are not a map type, even though it would otherwise be treated as a map[string]interface{}.\n\nThis means that we catch the s \u003d\u003d \"any\" case before getType is even called.  We could just check whether the result of getType is map[string]interface{}, but I think that would be even more obscure.  Instead, I\u0027ve modified the code to be a bit more explicit about this case, and used t.IsAny.\n\n\nI\u0027ve also simplified the array vs !array case.\n\nNote: in the first call to getType, the \"any\" case will never be chosen, but we still need it because it may be chosen in the recursive call to getType (it is possible to have a map[string][]interface{} result).",
      "parentUuid": "906ccb82_ea4f87b9",
      "range": {
        "startLine": 983,
        "startChar": 1,
        "endLine": 983,
        "endChar": 25
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "906ccb82_4a56d35c",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1010,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-09-22T05:30:33Z",
      "side": 1,
      "message": "Why not just fmt.Errorf below?",
      "range": {
        "startLine": 1010,
        "startChar": 5,
        "endLine": 1010,
        "endChar": 26
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a537cfd9_d2b1c4db",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1010,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-23T06:13:47Z",
      "side": 1,
      "message": "I had some reasons, but they weren\u0027t strong and no longer apply.\n\nDone.",
      "parentUuid": "906ccb82_4a56d35c",
      "range": {
        "startLine": 1010,
        "startChar": 5,
        "endLine": 1010,
        "endChar": 26
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "906ccb82_0a60db31",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-09-22T05:30:33Z",
      "side": 1,
      "message": "s/getType/jsonType/ ?",
      "range": {
        "startLine": 1018,
        "startChar": 5,
        "endLine": 1018,
        "endChar": 12
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a537cfd9_b2be40aa",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-23T06:13:47Z",
      "side": 1,
      "message": "I don\u0027t know what a good name for this method is, but I don\u0027t think it\u0027s jsonType.  We\u0027re translating api types to go types, so if anything it should be called goType, rather than jsonType. I think I\u0027d rather leave it as a generic name, and force people to read the documentation instead to understand what it\u0027s for.",
      "parentUuid": "906ccb82_0a60db31",
      "range": {
        "startLine": 1018,
        "startChar": 5,
        "endLine": 1018,
        "endChar": 12
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "906ccb82_6a53976b",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1029,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-09-22T05:30:33Z",
      "side": 1,
      "message": "No need for an empty default",
      "range": {
        "startLine": 1029,
        "startChar": 0,
        "endLine": 1029,
        "endChar": 9
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a537cfd9_72e8d8a2",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1029,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-23T06:13:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "906ccb82_6a53976b",
      "range": {
        "startLine": 1029,
        "startChar": 0,
        "endLine": 1029,
        "endChar": 9
      },
      "revId": "33c1035f902d030b9f14302bfdb918434d839440",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}