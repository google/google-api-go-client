{
  "comments": [
    {
      "key": {
        "uuid": "aa869394_608b7206",
        "filename": "calendar/v3/calendar-gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2181,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-01-11T03:31:50Z",
      "side": 1,
      "message": "This will modify the state of the pageToken parameter in the call object, such that calling Pages again (or Do, for that matter) will yield a different result. I don\u0027t think re-using a call object has a defined behaviour at the moment, but I believe it\u0027s safe to do with the current implementation, and each invocation will yield the same result.  Having Pages change the state of the call object via the pageToken parameter changes this.  I think this is OK if we document that call objects should not be reused, but we should consider if that is a restriction that we want to impose. \n\nNote that if a user decides to early-abort Pages by returning an error from f, they would have no way to restart the paging process unless they re-use the call object, as they do not have access to the page token.",
      "range": {
        "startLine": 2181,
        "startChar": 2,
        "endLine": 2181,
        "endChar": 13
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_a073baef",
        "filename": "calendar/v3/calendar-gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2181,
      "author": {
        "id": 5170
      },
      "writtenOn": "2016-01-11T03:43:57Z",
      "side": 1,
      "message": "I considered making a copy, but figured that that was redundant for the normal use case and the methods here already modify the call in-place (e.g. Do will add things to it). I thought calls were already not re-usable; is that not the case?",
      "parentUuid": "aa869394_608b7206",
      "range": {
        "startLine": 2181,
        "startChar": 2,
        "endLine": 2181,
        "endChar": 13
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_60629216",
        "filename": "calendar/v3/calendar-gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2181,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-01-11T04:02:11Z",
      "side": 1,
      "message": "Do (via doRequest) sets a couple of things such as the \"alt\" parameter in urlParams, and the mediaType for resumable uploads, but these values will be the same if the object is re-used, so there is no visible effect.\n\nThe only thing I can see that prevents reusing a Call object is that any reader supplied via Media will be advanced.\n\nAs I mentioned above, we don\u0027t promise anywhere that Call objects can be reused, but as far as I can tell, the only case where they can\u0027t is when Media is used.\n\nIn fact, your implementation of Pages assumes that the call object can be reused, because it does just that every time the for loop is executed.",
      "parentUuid": "aa869394_a073baef",
      "range": {
        "startLine": 2181,
        "startChar": 2,
        "endLine": 2181,
        "endChar": 13
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_002546e6",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1516,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-01-11T03:31:50Z",
      "side": 1,
      "message": "Can you rephrase this? I\u0027m not sure what \"Do\" refers to here.",
      "range": {
        "startLine": 1516,
        "startChar": 5,
        "endLine": 1516,
        "endChar": 40
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_20688af6",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 1516,
      "author": {
        "id": 5170
      },
      "writtenOn": "2016-01-11T03:43:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa869394_002546e6",
      "range": {
        "startLine": 1516,
        "startChar": 5,
        "endLine": 1516,
        "endChar": 40
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_e01f829d",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2004,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-01-11T03:07:25Z",
      "side": 1,
      "message": "It might be nice to define an error var (StopErr or similar) that the developer can return which wouldn\u0027t be propagated out but would stop the paging.",
      "range": {
        "startLine": 2004,
        "startChar": 9,
        "endLine": 2004,
        "endChar": 24
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_a08c9a23",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2004,
      "author": {
        "id": 5170
      },
      "writtenOn": "2016-01-11T03:13:17Z",
      "side": 1,
      "message": "My thinking was that they could use something like io.EOF if they want to stop paging, and then it\u0027s easy to check from the caller of Pages. Alternatively, I considered f returning `bool` instead, but figured that if you\u0027re stopping paging then you might be doing more complex processing of the elements, and it would be more convenient to return an intact error.",
      "parentUuid": "aa869394_e01f829d",
      "range": {
        "startLine": 2004,
        "startChar": 9,
        "endLine": 2004,
        "endChar": 24
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_8031562b",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2004,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-01-11T03:31:50Z",
      "side": 1,
      "message": "can you please use asComment for this?",
      "range": {
        "startLine": 2003,
        "startChar": 2,
        "endLine": 2004,
        "endChar": 67
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_c078bece",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2004,
      "author": {
        "id": 5170
      },
      "writtenOn": "2016-01-11T03:43:57Z",
      "side": 1,
      "message": "What does that buy us here? There\u0027s no string substitutions (so nothing needs escaping), and it is well under 70 chars.",
      "parentUuid": "aa869394_8031562b",
      "range": {
        "startLine": 2003,
        "startChar": 2,
        "endLine": 2004,
        "endChar": 67
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_203a4a0a",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2005,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-01-11T03:07:25Z",
      "side": 1,
      "message": "Should this rely on the Context method, as Do does?",
      "range": {
        "startLine": 2005,
        "startChar": 25,
        "endLine": 2005,
        "endChar": 44
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_e096a231",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2005,
      "author": {
        "id": 5170
      },
      "writtenOn": "2016-01-11T03:13:17Z",
      "side": 1,
      "message": "I\u0027d actually like to change Do to take a Context (and drop the Context method). That\u0027s how we\u0027d do this if we were starting from scratch. I think it\u0027s better to take a Context arg here, rather than not taking one and adding one later.",
      "parentUuid": "aa869394_203a4a0a",
      "range": {
        "startLine": 2005,
        "startChar": 25,
        "endLine": 2005,
        "endChar": 44
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_20816ae6",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2008,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-01-11T03:31:50Z",
      "side": 1,
      "message": "Please indent for readability, like most of the other quoted code in this file.  One space per indent is fine.\n\ne.g. pn(\" x, err :\u003d c.Do()\")",
      "range": {
        "startLine": 2008,
        "startChar": 2,
        "endLine": 2008,
        "endChar": 24
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa869394_e06dc209",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 1
      },
      "lineNbr": 2008,
      "author": {
        "id": 5170
      },
      "writtenOn": "2016-01-11T03:43:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa869394_20816ae6",
      "range": {
        "startLine": 2008,
        "startChar": 2,
        "endLine": 2008,
        "endChar": 24
      },
      "revId": "e12faf27e18a1d3c18587b1de6e6882cc2f4ef3c",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}