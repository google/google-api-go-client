#!/bin/bash

# Copyright 2020 Google LLC.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

export GITHUB_ACCESS_TOKEN=$(cat "${KOKORO_KEYSTORE_DIR}/73713_yoshi-automation-github-key")
export GITHUB_USERNAME=yoshi-automation
export GITHUB_NAME="Yoshi Automation Bot"
export GITHUB_EMAIL="yoshi-automation@google.com"
echo "https://$GITHUB_USERNAME:$GITHUB_ACCESS_TOKEN@github.com" > ~/.git-credentials

set -e -x

WORKING_BRANCH=regen

# cd to project dir on Kokoro instance
cd github/google-api-go-client

go version

git config --global user.name $GITHUB_NAME
git config --global user.email $GITHUB_EMAIL
git config --global credential.helper 'store --file ~/.git-credentials'

should_create_pr=1
git checkout -b $WORKING_BRANCH || {
    # The branch already exists - assume there's an existing PR.
    unset should_create_pr

    # Reset back to master
    git checkout $WORKING_BRANCH
    git reset --hard origin/master
}

pushd google-api-go-generator
make all
popd

if [[ -z "$(git status --porcelain)" ]]; then
    echo "No changes today; exiting."
    exit 0
fi

echo "Pushing changes"

commit_message="feat(all): autogenerated update ($(date '+%Y-%m-%d'))"
git commit --all -m "$commit_message"

git push origin $WORKING_BRANCH:$WORKING_BRANCH -f

if [ "$should_create_pr" ]; then
    echo "Creating PR."
    go run go run internal/kokoro/regen/sendpr.go -title "$commit_message"
fi
