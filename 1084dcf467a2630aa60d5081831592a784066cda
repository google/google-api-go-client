{
  "comments": [
    {
      "key": {
        "uuid": "228aa72f_4d99d98e",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 4
      },
      "lineNbr": 349,
      "author": {
        "id": 5201
      },
      "writtenOn": "2015-02-26T16:35:50Z",
      "side": 1,
      "message": "mutating the receiver a isn\u0027t what I would expect from a method named \"jsonBytes\", which looks like a getter-only method.\n\nalso, this jsonBytes is called twice... once by a.WriteGeneratedCode and once by a.GenerateCode?  Do we really do two slurpURL calls here also?  Maybe that also should be fixed.\n\nBut I think this json.Unmarshal could probably be moved to after the call to jsonBytes in GenerateCode.",
      "revId": "1084dcf467a2630aa60d5081831592a784066cda",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62a65fd5_df515b23",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 4
      },
      "lineNbr": 349,
      "author": {
        "id": 5155
      },
      "writtenOn": "2015-02-26T18:09:15Z",
      "side": 1,
      "message": "Yes, jsonBytes is called twice... once to populate the receiver and once to populate the \"a.m\" map[string]interface{}.  I don\u0027t see a good fix for that, as the two targets of Unmarshalling have two separate functions... the first to capture the common, pre-defined fields that describe the API; and the second to capture the full API and traverse it.\n\nThe downside to moving the Unmarshal back to GenerateCode would be that the receiver might be Unmarshalled twice with the same information if the original JSON matched the API JSON (which typically only happens during unit testing, so maybe this is not a big deal).  I\u0027ll move it as you suggest.",
      "parentUuid": "228aa72f_4d99d98e",
      "revId": "1084dcf467a2630aa60d5081831592a784066cda",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}