{
  "comments": [
    {
      "key": {
        "uuid": "8a2d6b96_6e158ff3",
        "filename": "internal/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-07-19T07:05:13Z",
      "side": 1,
      "message": "nit: errors.New is typical when there\u0027s no formatting string",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 24
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a3c1bf1_ffca1f44",
        "filename": "internal/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 7505
      },
      "writtenOn": "2016-07-19T14:28:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a2d6b96_6e158ff3",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 24
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a2d6b96_6e3c6f7d",
        "filename": "internal/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-07-19T07:05:13Z",
      "side": 1,
      "message": "Good call making the channel buffered. Now you don\u0027t need to make this a goroutine at all: you can send the addrs synchronously.",
      "range": {
        "startLine": 47,
        "startChar": 1,
        "endLine": 47,
        "endChar": 12
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a3c1bf1_dfc75b3a",
        "filename": "internal/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 7505
      },
      "writtenOn": "2016-07-19T14:28:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a2d6b96_6e3c6f7d",
      "range": {
        "startLine": 47,
        "startChar": 1,
        "endLine": 47,
        "endChar": 12
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab8503d_2b2df239",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 7715
      },
      "writtenOn": "2016-07-18T22:24:49Z",
      "side": 1,
      "message": "metaSeen",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 41,
        "endChar": 8
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7fc44c_6a742be1",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 7505
      },
      "writtenOn": "2016-07-19T00:35:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ab8503d_2b2df239",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 41,
        "endChar": 8
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab8503d_0b32ae98",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 7715
      },
      "writtenOn": "2016-07-18T22:24:49Z",
      "side": 1,
      "message": "if metaSeen[u.Metadata] {\n  t.Errorf...\n}",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 33
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7fc44c_4a676738",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 7505
      },
      "writtenOn": "2016-07-19T00:35:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ab8503d_0b32ae98",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 33
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab8503d_e6a83f8e",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 7715
      },
      "writtenOn": "2016-07-18T22:24:49Z",
      "side": 1,
      "message": "remove \"now\"",
      "range": {
        "startLine": 53,
        "startChar": 19,
        "endLine": 53,
        "endChar": 22
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7fc44c_8a716ff2",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 7505
      },
      "writtenOn": "2016-07-19T00:35:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ab8503d_e6a83f8e",
      "range": {
        "startLine": 53,
        "startChar": 19,
        "endLine": 53,
        "endChar": 22
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ab8503d_0633c355",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 7715
      },
      "writtenOn": "2016-07-18T22:24:49Z",
      "side": 1,
      "message": "I believe you have a race here. The close of the internal channel happens-before this line, and it also happens-before the channel receive in Next. But nothing orders the read of closed on line 60 above and this write to it.\n\nJust transpose this line and the above. Then:\n  closed \u003d true happens-before close(ch)\n  close(ch) happens-before \u003c-ch returns\n  \u003c-ch happens-before read of closed\nand you should be fine....\nexcept if Next is broken and returns early (say it never calls \u003c-ch), then there is still a race with closed. My argument assumes the code is right to begin with, so can\u0027t be used to test it. Hmmm....\n\nHow about this:\nch :\u003d make(chan string, 2)\nThe goroutine calls Next then does ch \u003c- \"next\".\nThe main code sleeps, does ch \u003c- \"closing\", then calls Close.\nThen read the channel and expect \"closing\" followed by \"next\". The reading can be done in a select with \u003c-time.After so you can get rid of the done channel below.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 14
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7fc44c_2a530359",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 7505
      },
      "writtenOn": "2016-07-19T00:35:14Z",
      "side": 1,
      "message": "What\u0027s the best way to read two items in a certain order with a timeout? Two separate selects, each with their own timeout? Or is there a way to do that with one select?",
      "parentUuid": "3ab8503d_0633c355",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 14
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a2d6b96_ce05a3be",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 5140
      },
      "writtenOn": "2016-07-19T07:05:13Z",
      "side": 1,
      "message": "I would phrase this as two selects (and two goroutines):\n\nnextc :\u003d make(chan []*Updates)\nclosedc :\u003d make(chan bool)\ngo func() {\n  next, err :\u003d watcher.Next()\n  if err !\u003d nil { t.Errorf(etc) }\n  nextc \u003c- next\n}()\ngo func() {\n  time.Sleep(50 * time.Millisecond)\n  watcher.Close()\n  close(closedc)\n}()\n\nselect {\n  case \u003c-nextc:\n    t.Fatalf(\"next too early etc!\")\n  case \u003c-closedc:\n    // OK.\n}\nselect {\n  case next :\u003d \u003c-nextc:\n    // Check next \u003d\u003d nil\n  case \u003c-time.After(...):\n    t.Error(\"foo!\")\n}\n\nThe sleep is a bit gross, but I think it\u0027s the easiest way to force the ordering you expect. (You could also gate the close on a 3rd channel\u0027s read, but that\u0027s starting to be fiddly).\n\nFWIW if you wanted to make this really simple then you could omit the timeout altogether and make the last \"select\" a simple if. Yes, it would hang forever if something went bad – but that seems unlikely.\n\nif next :\u003d \u003c- nextc; next !\u003d nil {\n  t.Errorf()\n}",
      "parentUuid": "5a7fc44c_2a530359",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 14
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a3c1bf1_1ff9c383",
        "filename": "internal/pool_test.go",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 7505
      },
      "writtenOn": "2016-07-19T14:28:32Z",
      "side": 1,
      "message": "Cool, thanks guys. I left it with the timeout just to be on the safe side. Seems readable enough at this point.",
      "parentUuid": "8a2d6b96_ce05a3be",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 14
      },
      "revId": "457c41e41323074a27dee88c4f5e1e37c9ee562e",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}