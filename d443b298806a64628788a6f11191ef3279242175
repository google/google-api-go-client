{
  "comments": [
    {
      "key": {
        "uuid": "244c8613_cf68adbe",
        "filename": "adexchangebuyer/v1.2/adexchangebuyer-gen.go",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 5201
      },
      "writtenOn": "2015-09-10T01:33:22Z",
      "side": 1,
      "message": "considering this will uncommonly be used, we should probably create this map only if ForceSendFields is non-empty.  Or just pass the list to SchemaToMap, and not do it here?\n\nWill review more later. Just have a second here.",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a467969e_47748ec7",
        "filename": "adexchangebuyer/v1.2/adexchangebuyer-gen.go",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-09-10T03:34:01Z",
      "side": 1,
      "message": "The two options you suggest seem to optimize for different things:\n\noption 1: Only create the map when ForceSendFields is non-empty.\nThis seems to be intended to reduce the cost of calling MarshalJSON by removing unnecessary map instantiations. I would have thought that these instantiations would be in the noise compared with the execution cost of (a) SchemaToMap, and (b) the RPC for which these schemas are being marshaled in the first place.\n\noption 2: Pass ForceSendFields directly to SchemaToMap.\nThis would reduce the code size of MarshalJSON, which is duplicated for every schema struct.  Although I think it\u0027s nicer for SchemaToMap to take a map rather than a list, I can see that this might be worth doing to reduce the overall code size.\n\nHave I correctly understood the intent behind your suggestions? Can you clarify whether your main concern is optimizing for execution time or code size?",
      "parentUuid": "244c8613_cf68adbe",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_b5bed099",
        "filename": "adexchangebuyer/v1.2/adexchangebuyer-gen.go",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 5201
      },
      "writtenOn": "2015-09-10T18:42:12Z",
      "side": 1,
      "message": "Yes, less code and less garbage. I don\u0027t have a main concern.\n\nI don\u0027t like to justify waste by saying that it\u0027s relatively small waste compared to other waste. It\u0027s so often the case that slowness is tons of little things.",
      "parentUuid": "a467969e_47748ec7",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a467969e_67baf246",
        "filename": "adexchangebuyer/v1.2/adexchangebuyer-gen.go",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-09-11T01:22:04Z",
      "side": 1,
      "message": "OK.  I\u0027ll change this once we\u0027ve settled on the representation of ForceSendFields.",
      "parentUuid": "244c8613_b5bed099",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_951f1468",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 5
      },
      "lineNbr": 1257,
      "author": {
        "id": 5201
      },
      "writtenOn": "2015-09-10T18:42:12Z",
      "side": 1,
      "message": "omitted (typo)",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a467969e_c7c87ee5",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 5
      },
      "lineNbr": 1257,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-09-11T01:22:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "244c8613_951f1468",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_7597e808",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 5
      },
      "lineNbr": 1266,
      "author": {
        "id": 5201
      },
      "writtenOn": "2015-09-10T18:42:12Z",
      "side": 1,
      "message": "I wonder if this could even just be a string instead of a []string, and document it as comma-separated. Less garbage at runtime creating all those slices, lighter on the page to type, (no need to write []string{...} for what\u0027s usually going to be one field), and it\u0027s not like we lose any type safety either way. We can still return a runtime-error either way if the field names or format are garbage.  It also gives us the flexibility to encode new meaning to the same field in the future, similar to how the json:\"\" struct tag has various things like the name, \",omitempty\", \",string\", etc. Maybe that last reason is a weak reason (we could just add a new struct field here for new reasons), but",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a467969e_6773d270",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 5
      },
      "lineNbr": 1266,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-09-11T01:04:25Z",
      "side": 1,
      "message": "I\u0027m not so sure that it is usually going to be one field.  I can imagine a lot of callers populating this with every field that they are modifying (for patch calls), to avoid having to care about which values are empty.  Whether users typically modify more than one field at once in patch calls, I don\u0027t know.\n\nThis could be addressed by adding a method for setting force-send fields which takes a variable number of arguments (and under the hood it could create a slice only if the user added more than one field name), but perhaps adding a method for this is too much overhead.\n\nRe: encoding new meaning in the field later: I think that storing that extra information in another field as you suggest would be preferable.  Struct tags are limited in how they can encode information (i.e. it has to be in a single string), but in our case we are not limited by that; we have a proper programming language at our disposal, and I think we should use it (another reason why I\u0027m not in favour of a comma-separated list).\n\n\u003e , but\n\ndid you mean to write more here?",
      "parentUuid": "244c8613_7597e808",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_d5da7c02",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 5
      },
      "lineNbr": 1276,
      "author": {
        "id": 5201
      },
      "writtenOn": "2015-09-10T18:42:12Z",
      "side": 1,
      "message": "unnecessary warning. It\u0027s never used directly so much as it\u0027s used by encoding/json.\n\nIf you want to say anything (we often don\u0027t document methods implementing well-known interfaces), you can just say:\n\n  // MarshalJSON implements json.Marshaler. It\n  // encodes s as a JSON struct in the usual way,\n  // but additionally respects s.ForceSendFields.",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a467969e_47bd6e3b",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 5
      },
      "lineNbr": 1276,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-09-11T01:22:04Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "244c8613_d5da7c02",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244c8613_64289b48",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 5
      },
      "lineNbr": 1276,
      "author": {
        "id": 5155
      },
      "writtenOn": "2015-09-11T01:35:24Z",
      "side": 1,
      "message": "Sorry, that was my fault... I asked Michael to add a comment here.",
      "parentUuid": "a467969e_47bd6e3b",
      "revId": "d443b298806a64628788a6f11191ef3279242175",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}