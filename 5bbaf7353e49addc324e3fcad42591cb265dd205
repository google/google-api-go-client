{
  "comments": [
    {
      "key": {
        "uuid": "50c9419b_d38ef4fc",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-10-07T23:23:17Z",
      "side": 1,
      "message": "This doesn\u0027t make a copy of the []string as line 1596 does.  But here would not be the place to do it anyway: you want to do it before returning from the method which accepts the []string in the first place.  Is there any reason why the required params need to be stored as separate fields in the Call object? It looks like they can just be stored in urlParams_ from the beginning like everything else.",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90673931_81145dc7",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5155
      },
      "writtenOn": "2015-10-08T06:59:35Z",
      "side": 1,
      "message": "I went down this path, and it turns out that it is not safe to perform a wholesale storage of required params in urlParams_ because we come across situations like those found in testdata/any.want where one of the passed required parameters is a *logsink and it is handled specially.\n\nSo I will work on go back to the current path where separate required fields are still stored in the Call object, but will work on fixing the []string copy.  I don\u0027t believe we have any of these situations anywhere but will continue to investigate how to handle it.",
      "parentUuid": "50c9419b_d38ef4fc",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}