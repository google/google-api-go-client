{
  "comments": [
    {
      "key": {
        "uuid": "50c9419b_d38ef4fc",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-10-07T23:23:17Z",
      "side": 1,
      "message": "This doesn\u0027t make a copy of the []string as line 1596 does.  But here would not be the place to do it anyway: you want to do it before returning from the method which accepts the []string in the first place.  Is there any reason why the required params need to be stored as separate fields in the Call object? It looks like they can just be stored in urlParams_ from the beginning like everything else.",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90673931_81145dc7",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5155
      },
      "writtenOn": "2015-10-08T06:59:35Z",
      "side": 1,
      "message": "I went down this path, and it turns out that it is not safe to perform a wholesale storage of required params in urlParams_ because we come across situations like those found in testdata/any.want where one of the passed required parameters is a *logsink and it is handled specially.\n\nSo I will work on go back to the current path where separate required fields are still stored in the Call object, but will work on fixing the []string copy.  I don\u0027t believe we have any of these situations anywhere but will continue to investigate how to handle it.",
      "parentUuid": "50c9419b_d38ef4fc",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90673931_d7857798",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5155
      },
      "writtenOn": "2015-10-08T18:17:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90673931_81145dc7",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65b5a5f7_7c28199d",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-10-08T23:18:20Z",
      "side": 1,
      "message": "Can you help me understand your logsink example? I can\u0027t see how it is handled specially, apart from the fact that it is a body param.  Is that what you\u0027re referring to?\n\nIf so, can\u0027t you modify the code at 1581 to store query args in urlParams and other args (body and path) in the Call object?  I think the code will be easier to reason about if url params are always stored immediately in c.urlParams_.",
      "parentUuid": "90673931_81145dc7",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8521b987_a85f1301",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5155
      },
      "writtenOn": "2015-10-09T00:52:25Z",
      "side": 1,
      "message": "Hmmm... it looks very risky and messy to me.\n\nTake a look in testdata/any.want and search for c.logsink...\nAround lines 1030-1040, we have this:\n\tvar body io.Reader \u003d nil\n\tbody, err :\u003d googleapi.WithoutDataWrapper.JSONReader(c.logsink)\n\tif err !\u003d nil {\n\t\treturn nil, err\n\t}\n\tctype :\u003d \"application/json\"\n\tc.urlParams_.Set(\"alt\", alt)\n\turls :\u003d googleapi.ResolveRelative(c.s.BasePath, \"v1beta3/projects/{projectsId}/logServices/{logServicesId}/sinks\")\n\turls +\u003d \"?\" + c.urlParams_.Encode()\n\treq, _ :\u003d http.NewRequest(\"POST\", urls, body)\n\nAnd c.logsink is declared as:\n\tlogsink       *LogSink\nand assigned like this:\n// Create: Creates the specified log service sink resource.\nfunc (r *ProjectsLogServicesSinksService) Create(projectsId string, logServicesId string, logsink *LogSink) *ProjectsLogServicesSinksCreateCall {\n\tc :\u003d \u0026ProjectsLogServicesSinksCreateCall{s: r.s, urlParams_: make(internal.URLParams)}\n\tc.projectsId \u003d projectsId\n\tc.logServicesId \u003d logServicesId\n\tc.logsink \u003d logsink\n\treturn c\n}\n\nSo are you saying that you want me to move the actual body creation to (in this case) the Create method?\n\nIf yes, I can give it a shot, but that still seems really risky to me.",
      "parentUuid": "65b5a5f7_7c28199d",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eadb2204_50a4cce4",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-10-09T01:11:32Z",
      "side": 1,
      "message": "No, body args (like logsink) and path args would continue to be handled as they are.  So in the loop which starts on line 1573 you would check arg.location for each arg.  If it\u0027s \"query\" then you stick it in urlParams. Otherwise you store it in the call object, just like the existing code does.",
      "parentUuid": "8521b987_a85f1301",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eaba42ed_210a745e",
        "filename": "google-api-go-generator/gen.go",
        "patchSetId": 14
      },
      "lineNbr": 1709,
      "author": {
        "id": 5155
      },
      "writtenOn": "2015-10-09T23:47:31Z",
      "side": 1,
      "message": "Ah, I think I understand now.  Thanks, and sorry I didn\u0027t get it before.",
      "parentUuid": "eadb2204_50a4cce4",
      "range": {
        "startLine": 1709,
        "startChar": 3,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "5bbaf7353e49addc324e3fcad42591cb265dd205",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}