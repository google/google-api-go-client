{
  "comments": [
    {
      "key": {
        "uuid": "768aefdc_e7899622",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:53:28Z",
      "side": 1,
      "message": "why not fewer?",
      "range": {
        "startLine": 77,
        "startChar": 23,
        "endLine": 77,
        "endChar": 25
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_0787da0f",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:53:28Z",
      "side": 1,
      "message": "why not fewer?",
      "range": {
        "startLine": 103,
        "startChar": 18,
        "endLine": 103,
        "endChar": 20
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_a7938e52",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:53:28Z",
      "side": 1,
      "message": "it will",
      "range": {
        "startLine": 122,
        "startChar": 18,
        "endLine": 122,
        "endChar": 22
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_4785e206",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:53:28Z",
      "side": 1,
      "message": "d",
      "range": {
        "startLine": 122,
        "startChar": 29,
        "endLine": 122,
        "endChar": 30
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_641264c7",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:34:17Z",
      "side": 1,
      "message": "Is this word necessary (given enough time)?\n\nActually, since you\u0027re only using an int to store the numbers (and the fact that this will run on a physical machine), I\u0027m gonna go ahead and say that\u0027s a big fat lie :).",
      "range": {
        "startLine": 143,
        "startChar": 47,
        "endLine": 143,
        "endChar": 52
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_e4943447",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:34:17Z",
      "side": 1,
      "message": "What about:\n\np        []int // Primes in the range [2..max)\nmax      int   // The largest number we\u0027ve considered so far when generating p.",
      "range": {
        "startLine": 161,
        "startChar": 1,
        "endLine": 162,
        "endChar": 58
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_04927858",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:34:17Z",
      "side": 1,
      "message": "I find this a bit tricky to follow due to:\n * all of the indexes (e.g. x0 vs start vs max vs x)\n * the interleaving of the \"generate items to return\" case with the \"populate it.p *and* generate items to return\" case.\n\nI\u0027ve hacked up something which (to me) is easier to follow.  YMMV.  What do you think? https://play.golang.org/p/ea7KBThNSe",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 169,
        "endChar": 80
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_4421600e",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:34:17Z",
      "side": 1,
      "message": "-",
      "range": {
        "startLine": 189,
        "startChar": 19,
        "endLine": 189,
        "endChar": 20
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "768aefdc_241c5cd5",
        "filename": "iterator/examples_test.go",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5505
      },
      "writtenOn": "2016-09-06T01:34:17Z",
      "side": 1,
      "message": "-",
      "range": {
        "startLine": 189,
        "startChar": 15,
        "endLine": 189,
        "endChar": 16
      },
      "revId": "02bf9a1dc53f57312027978fef8971567f7e98ee",
      "serverId": "c958e1eb-c711-3e17-a1d0-c94d35b2e5aa",
      "unresolved": false
    }
  ]
}